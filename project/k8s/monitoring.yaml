apiVersion: v1
kind: ServiceMonitor
metadata:
  name: backend-metrics
  namespace: backend
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: frontend-metrics
  namespace: frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: employee-directory-alerts
  namespace: backend
  labels:
    app: employee-directory
spec:
  groups:
  - name: employee-directory.rules
    rules:
    # High CPU usage alert
    - alert: HighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{namespace=~"frontend|backend"}[5m]) * 100 > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High CPU usage detected"
        description: "CPU usage is above 80% for {{ $labels.namespace }}/{{ $labels.pod }}"
    
    # High memory usage alert
    - alert: HighMemoryUsage
      expr: (container_memory_usage_bytes{namespace=~"frontend|backend"} / container_spec_memory_limit_bytes) * 100 > 85
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High memory usage detected"
        description: "Memory usage is above 85% for {{ $labels.namespace }}/{{ $labels.pod }}"
    
    # Pod restart alert
    - alert: PodRestartingTooOften
      expr: rate(kube_pod_container_status_restarts_total{namespace=~"frontend|backend"}[15m]) > 0
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Pod restarting too often"
        description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting frequently"
    
    # Database connection alert
    - alert: DatabaseConnectionHigh
      expr: sum(rate(flask_database_connections_total[5m])) > 50
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "High database connection count"
        description: "Database connection count is above 50 connections per second"
    
    # Application down alert
    - alert: ApplicationDown
      expr: up{job=~"backend|frontend"} == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Application is down"
        description: "{{ $labels.job }} application is not responding"