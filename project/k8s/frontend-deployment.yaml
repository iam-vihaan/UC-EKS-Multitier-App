apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: frontend
  labels:
    app: frontend
    app.kubernetes.io/name: employee-directory
    app.kubernetes.io/component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: employee-directory
        app.kubernetes.io/component: frontend
    spec:
      # Fargate profile selector - no node selector needed for Fargate
      containers:
      - name: frontend
        image: your-account.dkr.ecr.us-east-1.amazonaws.com/employee-directory-frontend:latest
        ports:
        - containerPort: 80
          name: http
        
        env:
        - name: REACT_APP_API_URL
          value: "/api"
        
        # Resource limits and requests for Fargate
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - SETGID
            - SETUID
        
        # Volume mounts for nginx
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-tmp
          mountPath: /tmp
      
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      
      # Restart policy
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: frontend
  labels:
    app: frontend
    app.kubernetes.io/name: employee-directory
    app.kubernetes.io/component: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP